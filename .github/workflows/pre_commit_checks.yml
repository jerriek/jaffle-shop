name: pre-commit-check

on:
  push:
    branches-ignore:
      - 'main'
      
jobs:
  pre-commit-pip:
    name: Install pre-commit via pip
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-latest']

  dbt-checkpoint:
    runs-on: ubuntu-latest
    # Set environment variables used throughout workflow
    env:
      DBT_PROFILES_DIR: .
      DBT_SNOWFLAKE_USER: ${{ env.DBT_SNOWFLAKE_USER}}
      DBT_SNOWFLAKE_PASSWORD: ${{secrets.DBT_SNOWFLAKE_PASSWORD}}

    steps:
      - uses: "actions/checkout@v3"
      - uses: "actions/setup-python@v4"
        with:
          python-version: "3.9"

    # Using bash and pip to install dbt and pre-commit
    # Update the dbt installation command to include the adapter you need
      - name: Install dbt and pre-commit
        shell: bash -l {0}
        run: |
          python -m pip install dbt-snowflake pre-commit

    # This action will output all the files that are being created and modified in our PR
      - name: Get changed files
        id: get_file_changes
        uses: trilom/file-changes-action@v1.2.4
        with:
          output: ' '

      - name: Echo variable
        id: echo_variable
        run: echo $DBT_SNOWFLAKE_USER

    # Transforming the output of get_file_changes to a string we can use for our next step
    # We want to take in account both new files and files that have been modified
      - name: Get new and changed .sql files in /models to lint
        id: get_files_to_lint
        shell: bash -l {0}
        run: |
          # Set the command in the $() brackets as an output to use in later steps
          echo "lintees=$(
          # Issue where grep regular expressions don't work as expected on the
          # Github Actions shell, check dbt/models/ folder
          echo \
          $(echo ${{ steps.get_file_changes.outputs.files_modified }} |
          tr -s ' ' '\n' |
          grep -E '^models.*[.]sql$' |
          tr -s '\n' ' ') \
          $(echo ${{ steps.get_file_changes.outputs.files_added }} |
          tr -s ' ' '\n' |
          grep -E '^models.*[.]sql$' |
          tr -s '\n' ' ')
          )" >> $GITHUB_OUTPUT

    # Finally run pre-commit
      - name: Run pre-commit
        shell: bash -l {0}
        run: |
          pre-commit run --all-files ${{ steps.get_files_to_lint.outputs.files }}
      
      - name: Run dbt checkpoint
        uses: dbt-checkpoint/action@v0.1
        with:
          extra_args: --files ${{ steps.get_file_changes.outputs.files}}
          dbt_version: 1.6.3
          dbt_adapter: dbt-snowflake